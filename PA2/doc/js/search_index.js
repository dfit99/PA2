var search_data = {"index":{"searchIndex":["moviedata","movietest","load_data()","mean()","most_similar()","movies()","new()","new()","predict()","rating()","rms()","run_test()","similarity()","stddev()","to_a()","user_movie_index()","viewers()"],"longSearchIndex":["moviedata","movietest","moviedata#load_data()","movietest#mean()","moviedata#most_similar()","moviedata#movies()","moviedata::new()","movietest::new()","moviedata#predict()","moviedata#rating()","movietest#rms()","moviedata#run_test()","moviedata#similarity()","movietest#stddev()","movietest#to_a()","moviedata#user_movie_index()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","",""],["MovieTest","","MovieTest.html","",""],["load_data","MovieData","MovieData.html#method-i-load_data","(training_set, test_set = :NIL)","<p>loads data into data structures\n"],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>returns means difference, similar to finding RMS but uses absolute value\ninstead\n"],["most_similar","MovieData","MovieData.html#method-i-most_similar","(user1)","<p>returns a sorted list of similarity between user1 and everyone else, bases\nsimilarity on average difference, …\n"],["movies","MovieData","MovieData.html#method-i-movies","(user)","<p>given a user, returns set of movies\n"],["new","MovieData","MovieData.html#method-c-new","(training_set, test_set = :NIL)",""],["new","MovieTest","MovieTest.html#method-c-new","(data)",""],["predict","MovieData","MovieData.html#method-i-predict","(user1, movie)","<p>predicts how user1 will rate a movie\n"],["rating","MovieData","MovieData.html#method-i-rating","(user,movie)","<p>given a user and movie, returns rating\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>returns RMS, equivalent to standard deviation\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k = 150)","<p>runs a test on a given amount of reviews, returns MovieTest object\n"],["similarity","MovieData","MovieData.html#method-i-similarity","(user1, user2)","<p>returns a similarity ranking from 0-5 (0 most similar) between 2 users\nbased on average difference\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>returns standard  deviation by looping through and using typical formula\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>returns array of tuples (user, movie, original rating, guess rating)\n"],["user_movie_index","MovieData","MovieData.html#method-i-user_movie_index","()","<p>iniatilizes an array of user&lt;(movie,rating), …) tuples, followed by an\narray of &lt;movie,&lt;user1..&gt;&gt; …\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(movie)","<p>given a movie returns set of users\n"]]}}